@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
    font-family: "Open Sans";
    src: local("Open Sans"),
        url("/OpenSans-VariableFont_wdth,wght.ttf") format("truetype");
    font-weight: 300 800;
    font-style: normal;
}

@font-face {
    font-family: "Open Sans";
    src: local("Open Sans"),
        url("/OpenSans-Italic-VariableFont_wdth,wght.ttf") format("truetype");
    font-style: italic;
}

@layer utilities {
    .animation-pause {
        animation-play-state: paused;
    }

    .animation-play {
        animation-play-state: running;
    }
}

html {
    scroll-behavior: smooth;
    --scrollbar-width: 0px;

    font-family: "Open Sans", serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
    font-variation-settings: "wdth" 100;

    &:has(dialog[open]) {
        overflow: hidden;
        padding-right: var(--scrollbar-width, 17px);
    }
}

@media (prefers-reduced-motion: reduce) {
    *,
    ::before,
    ::after {
        animation-delay: -1ms !important;
        animation-duration: 1ms !important;
        animation-iteration-count: 1 !important;
        background-attachment: initial !important;
        scroll-behavior: auto !important;
        transition-duration: 0s !important;
        transition-delay: 0s !important;
        view-transition-name: unset !important;
    }
}

@supports (interpolate-size: allow-keywords) {
    :root {
        @media (prefers-reduced-motion: no-preference) {
            interpolate-size: allow-keywords;
        }
    }

    details {
        &::details-content {
            block-size: 0;
            overflow-y: clip;
            transition: content-visibility 0.5s allow-discrete, block-size 0.5s;
        }

        &[open]::details-content {
            block-size: auto;
        }
    }
}

.no-dimorphism {
    background: rgb(233, 233, 233);
    background: linear-gradient(
        113deg,
        rgba(125, 211, 252, 1) 0%,
        rgba(125, 211, 252, 1) 44.5%,
        rgba(249, 168, 212, 1) 44.5%,
        rgba(249, 168, 212, 1) 100%
    );
}

[inert]:not(li:has(a), dialog, .arrow) {
    opacity: theme("opacity.20");
    position: relative;
    z-index: -10;
}

.horizontal-evolution-layout {
    display: grid;
    grid-template-columns: auto min-content auto;
    align-items: center;
}

.vertical-evolution-layout {
    display: flex;
    flex-direction: column;
}

@property --bg-modal-color {
    syntax: "<color>";
    initial-value: transparent;
    inherits: true;
}

dialog {
    --animation-speed: 0.3s;
    opacity: 0;
    translate: 0 90vh;
    color: transparent;
    border-color: transparent;
    transition: opacity var(--animation-speed) ease-out,
        translate var(--animation-speed) ease-out,
        color var(--animation-speed) ease-out,
        border-color var(--animation-speed) ease-out,
        overlay var(--animation-speed) ease-out allow-discrete,
        display var(--animation-speed) ease-out allow-discrete;
    &[open] {
        opacity: 1;
        translate: 0 0;
    }

    @starting-style {
        &[open] {
            opacity: 0;
            translate: 0 90vh;
            color: transparent;
            border-color: transparent;
        }
    }
}

.pkmn-details-dialog {
    --dot-size: 0.75px;
    --dot-color: rgb(from var(--bg-modal-color) r g b / 0.65);

    @media (max-resolution: 1.1dppx) {
        --dot-color: rgb(from var(--bg-modal-color) r g b / 0.25);
    }

    box-shadow: 0px 0px 53px 0px;
    background-image: radial-gradient(
            var(--dot-color) var(--dot-size),
            transparent var(--dot-size)
        ),
        radial-gradient(
            var(--dot-color) var(--dot-size),
            transparent var(--dot-size)
        ),
        linear-gradient(
            0deg,
            rgb(from var(--dot-color) r g b / 1) 0%,
            rgb(from var(--dot-color) r g b / 1) 6.05%,
            rgba(255, 255, 255, 0) 6.05%
        );
    background-size: 20px 20px, 20px 20px, 100% 1210px;
    background-position: 0 0, 10px 10px, center bottom -12px;
    background-repeat: repeat, repeat, no-repeat;

    .main-infos {
        background-image: radial-gradient(
                var(--dot-color) var(--dot-size),
                transparent var(--dot-size)
            ),
            radial-gradient(
                var(--dot-color) var(--dot-size),
                #fff var(--dot-size)
            );
        background-size: 20px 20px, 20px 20px;
        background-position: -17px 0, 10px 10px;
    }

    .infinite-header-bg {
        height: 0px;
        position: sticky;
        &::before {
            content: "";
            display: block;
            bottom: 100%;
            background-color: inherit;
            height: 500px;
            position: absolute;
            left: 0;
            right: 0;
        }
    }
}

.type-name {
    font-weight: bold;
    color: theme("colors.slate.50");
    text-shadow: 1px 1px 2px black, 0 0 15em black, 0 0 0.1em black;
}

details {
    --animation-speed: 0.3s;

    .stat-bar {
        transform: scaleX(0);
        transition: transform 0.95s var(--animation-speed);
        transform-origin: left center;
    }
    &[open] {
        .stat-bar {
            transform: scaleX(1);
            transition: transform 0.95s;
            transform-origin: left center;
        }

        @starting-style {
            .stat-bar {
                transform: scaleX(0);
            }
        }

        summary::marker {
            color: black !important;
        }
    }
}

.modal-footer {
    --alpha: 0.6;
    --animation-speed: 0.45s;

    &::after,
    &::before {
        content: "";
        position: absolute;
        display: block;
        pointer-events: none;
        z-index: -1;
        bottom: 0;
        width: 100%;
        background: var(--bg-modal-color);
        transition: --bg-modal-color var(--animation-speed) 0.3s ease-out;

        @starting-style {
            --bg-modal-color: white;
            background: var(--bg-modal-color);
        }
    }

    &::after {
        background: radial-gradient(
            ellipse at 50% -50px,
            rgba(255, 255, 255, 0) 80%,
            rgb(from var(--bg-modal-color) r g b / var(--alpha)) 90%,
            rgb(from var(--bg-modal-color) r g b / var(--alpha)) 100%
        );
        height: 200%;
    }

    &::before {
        height: 90%;
        background: linear-gradient(
            0deg,
            rgb(from var(--bg-modal-color) r g b / var(--alpha)) 0%,
            rgba(255, 255, 255, 1) 95%
        );
        transition-delay: 0.15s;
        background-color: var(--bg-modal-color);
    }
}

.mega-evolution {
    background: linear-gradient(
        -45deg,
        #e98b2d,
        #80c468,
        #09b8db,
        #23d5ab,
        #e35faa
    );
    background-size: 400% 400%;
    animation: mega-evolution-gradient 15s ease infinite;
}

@keyframes mega-evolution-gradient {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

.scrollbar-measure {
    width: 100px;
    height: 100px;
    overflow: scroll;
    position: absolute;
    top: -9999px;
}

@property --border-type-angle {
    syntax: "<angle>";
    initial-value: 34.6deg;
    inherits: true;
}

.border-type-animated {
    background-origin: border-box;
    background-clip: padding-box, border-box;

    animation: type-border 40s ease-in-out infinite alternate-reverse;
    animation-play-state: paused;

    &:hover {
        animation-play-state: running;
    }
}

@keyframes type-border {
    to {
        --border-type-angle: -34.6deg;
    }
}

.marquee {
    display: flex;
    white-space: nowrap;
    width: 100%;
}

.marquee-text {
    text-transform: uppercase;
    font-weight: 700;
    animation: loop-text 5s infinite linear;
    animation-play-state: paused;
}

@keyframes loop-text {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(-100%);
    }
}
